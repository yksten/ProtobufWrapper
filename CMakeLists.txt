PROJECT(PBWrapper)
CMAKE_MINIMUM_REQUIRED(VERSION 3.1)
INCLUDE(CheckIncludeFileCXX)

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/bin)
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/bin)
SET(CMAKE_DEBUG_POSTFIX d)

INCLUDE_DIRECTORIES(./ ./include/)
AUX_SOURCE_DIRECTORY(. DIR_SRCS)

SET(SRC "./include/serialize.h" "./include/encoder.h" "./include/decoder.h" "./src/encoder.cpp" "./src/decoder.cpp")
SOURCE_GROUP(src FILES ${SRC})

LIST(REMOVE_ITEM DIR_SRCS "./tester/main.cpp")
IF (MSVC)
    ADD_LIBRARY(PBWrapper SHARED ${SRC} ${DIR_SRCS}) 
ELSE ()
    ADD_LIBRARY(PBWrapper ${SRC} ${DIR_SRCS}) 
ENDIF (MSVC)


SET(EXEC OFF CACHE BOOL "")
IF (${EXEC} STREQUAL ON)
    SET(TESTER "./tester/main.cpp")
    SOURCE_GROUP(tester FILES ${TESTER})
    SET(RW_DATA_PATH "${PROJECT_SOURCE_DIR}/tester/" CACHE PATH "root path")
    LINK_DIRECTORIES(${RW_DATA_PATH})
    ADD_EXECUTABLE(tester ${TESTER})
    TARGET_LINK_LIBRARIES(tester PBWrapper)
    IF (MSVC)
        TARGET_LINK_LIBRARIES(tester shlwapi)
        TARGET_LINK_LIBRARIES(tester debug "benchmarkd.lib" optimized "benchmark.lib")
    ENDIF (MSVC)
ENDIF()