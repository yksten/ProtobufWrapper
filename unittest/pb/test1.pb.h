// Generated by the protocol buffer costruExamplepiler.  DO NOT EDIT!
// source: test1.proto

#ifndef PROTOBUF_test1_2eproto__INCLUDED
#define PROTOBUF_test1_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_test1_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsstruExampleImpl();
void InitDefaultsstruExample();
void InitDefaultsstruExamples_MEntry_DoNotUseImpl();
void InitDefaultsstruExamples_MEntry_DoNotUse();
void InitDefaultsstruExamplesImpl();
void InitDefaultsstruExamples();
inline void InitDefaults() {
  InitDefaultsstruExample();
  InitDefaultsstruExamples_MEntry_DoNotUse();
  InitDefaultsstruExamples();
}
}  // namespace protobuf_test1_2eproto
namespace test {
class struExample;
class struExampleDefaultTypeInternal;
extern struExampleDefaultTypeInternal _struExample_default_instance_;
class struExamples;
class struExamplesDefaultTypeInternal;
extern struExamplesDefaultTypeInternal _struExamples_default_instance_;
class struExamples_MEntry_DoNotUse;
class struExamples_MEntry_DoNotUseDefaultTypeInternal;
extern struExamples_MEntry_DoNotUseDefaultTypeInternal _struExamples_MEntry_DoNotUse_default_instance_;
}  // namespace test
namespace test {

// ===================================================================

class struExample : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:test.struExample) */ {
 public:
  struExample();
  virtual ~struExample();

  struExample(const struExample& from);

  inline struExample& operator=(const struExample& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  struExample(struExample&& from) noexcept
    : struExample() {
    *this = ::std::move(from);
  }

  inline struExample& operator=(struExample&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const struExample& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const struExample* internal_default_instance() {
    return reinterpret_cast<const struExample*>(
               &_struExample_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(struExample* other);
  friend void swap(struExample& a, struExample& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline struExample* New() const PROTOBUF_FINAL { return New(NULL); }

  struExample* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const struExample& from);
  void MergeFrom(const struExample& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(struExample* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string str = 2;
  void clear_str();
  static const int kStrFieldNumber = 2;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  #if LANG_CXX11
  void set_str(::std::string&& value);
  #endif
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // float f = 3;
  void clear_f();
  static const int kFFieldNumber = 3;
  float f() const;
  void set_f(float value);

  // double db = 4;
  void clear_db();
  static const int kDbFieldNumber = 4;
  double db() const;
  void set_db(double value);

  // @@protoc_insertion_point(class_scope:test.struExample)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::uint32 id_;
  float f_;
  double db_;
  mutable int _cached_size_;
  friend struct ::protobuf_test1_2eproto::TableStruct;
  friend void ::protobuf_test1_2eproto::InitDefaultsstruExampleImpl();
};
// -------------------------------------------------------------------

class struExamples_MEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<struExamples_MEntry_DoNotUse, 
    ::google::protobuf::int32, ::test::struExample,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<struExamples_MEntry_DoNotUse, 
    ::google::protobuf::int32, ::test::struExample,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  struExamples_MEntry_DoNotUse();
  struExamples_MEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const struExamples_MEntry_DoNotUse& other);
  static const struExamples_MEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const struExamples_MEntry_DoNotUse*>(&_struExamples_MEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class struExamples : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:test.struExamples) */ {
 public:
  struExamples();
  virtual ~struExamples();

  struExamples(const struExamples& from);

  inline struExamples& operator=(const struExamples& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  struExamples(struExamples&& from) noexcept
    : struExamples() {
    *this = ::std::move(from);
  }

  inline struExamples& operator=(struExamples&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const struExamples& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const struExamples* internal_default_instance() {
    return reinterpret_cast<const struExamples*>(
               &_struExamples_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(struExamples* other);
  friend void swap(struExamples& a, struExamples& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline struExamples* New() const PROTOBUF_FINAL { return New(NULL); }

  struExamples* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const struExamples& from);
  void MergeFrom(const struExamples& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(struExamples* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .test.struExample v = 1;
  int v_size() const;
  void clear_v();
  static const int kVFieldNumber = 1;
  const ::test::struExample& v(int index) const;
  ::test::struExample* mutable_v(int index);
  ::test::struExample* add_v();
  ::google::protobuf::RepeatedPtrField< ::test::struExample >*
      mutable_v();
  const ::google::protobuf::RepeatedPtrField< ::test::struExample >&
      v() const;

  // map<int32, .test.struExample> m = 2;
  int m_size() const;
  void clear_m();
  static const int kMFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::test::struExample >&
      m() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::test::struExample >*
      mutable_m();

  // @@protoc_insertion_point(class_scope:test.struExamples)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::test::struExample > v_;
  ::google::protobuf::internal::MapField<
      struExamples_MEntry_DoNotUse,
      ::google::protobuf::int32, ::test::struExample,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > m_;
  mutable int _cached_size_;
  friend struct ::protobuf_test1_2eproto::TableStruct;
  friend void ::protobuf_test1_2eproto::InitDefaultsstruExamplesImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// struExample

// uint32 id = 1;
inline void struExample::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 struExample::id() const {
  // @@protoc_insertion_point(field_get:test.struExample.id)
  return id_;
}
inline void struExample::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:test.struExample.id)
}

// string str = 2;
inline void struExample::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& struExample::str() const {
  // @@protoc_insertion_point(field_get:test.struExample.str)
  return str_.GetNoArena();
}
inline void struExample::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:test.struExample.str)
}
#if LANG_CXX11
inline void struExample::set_str(::std::string&& value) {
  
  str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:test.struExample.str)
}
#endif
inline void struExample::set_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:test.struExample.str)
}
inline void struExample::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:test.struExample.str)
}
inline ::std::string* struExample::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:test.struExample.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* struExample::release_str() {
  // @@protoc_insertion_point(field_release:test.struExample.str)
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void struExample::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:test.struExample.str)
}

// float f = 3;
inline void struExample::clear_f() {
  f_ = 0;
}
inline float struExample::f() const {
  // @@protoc_insertion_point(field_get:test.struExample.f)
  return f_;
}
inline void struExample::set_f(float value) {
  
  f_ = value;
  // @@protoc_insertion_point(field_set:test.struExample.f)
}

// double db = 4;
inline void struExample::clear_db() {
  db_ = 0;
}
inline double struExample::db() const {
  // @@protoc_insertion_point(field_get:test.struExample.db)
  return db_;
}
inline void struExample::set_db(double value) {
  
  db_ = value;
  // @@protoc_insertion_point(field_set:test.struExample.db)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// struExamples

// repeated .test.struExample v = 1;
inline int struExamples::v_size() const {
  return v_.size();
}
inline void struExamples::clear_v() {
  v_.Clear();
}
inline const ::test::struExample& struExamples::v(int index) const {
  // @@protoc_insertion_point(field_get:test.struExamples.v)
  return v_.Get(index);
}
inline ::test::struExample* struExamples::mutable_v(int index) {
  // @@protoc_insertion_point(field_mutable:test.struExamples.v)
  return v_.Mutable(index);
}
inline ::test::struExample* struExamples::add_v() {
  // @@protoc_insertion_point(field_add:test.struExamples.v)
  return v_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::test::struExample >*
struExamples::mutable_v() {
  // @@protoc_insertion_point(field_mutable_list:test.struExamples.v)
  return &v_;
}
inline const ::google::protobuf::RepeatedPtrField< ::test::struExample >&
struExamples::v() const {
  // @@protoc_insertion_point(field_list:test.struExamples.v)
  return v_;
}

// map<int32, .test.struExample> m = 2;
inline int struExamples::m_size() const {
  return m_.size();
}
inline void struExamples::clear_m() {
  m_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::test::struExample >&
struExamples::m() const {
  // @@protoc_insertion_point(field_map:test.struExamples.m)
  return m_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::test::struExample >*
struExamples::mutable_m() {
  // @@protoc_insertion_point(field_mutable_map:test.struExamples.m)
  return m_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace test

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test1_2eproto__INCLUDED
